apiVersion: v1
kind: ServiceAccount
metadata:
  name: status-server
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: status-server-role
  namespace: default
rules:
  - apiGroups: ["*"]
    resources:
      - challenges
      - deployments
      - services
      - ingresses
    verbs:
      - get
      - list
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: status-server-role-binding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: status-server
    namespace: default
roleRef:
  kind: Role
  name: status-server-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: status-server
  namespace: default
  labels:
    app: status-server
spec:
  selector:
    matchLabels:
      app: status-server
  template:
    metadata:
      labels:
        app: status-server
        # kctf policy block-internal also allows egress to external
        uiuctf-egress: k8s-api
    spec:
      containers:
        - name: server
          image: us-central1-docker.pkg.dev/dotted-forest-314903/uiuctf-2025/status-server-server:107740584637e98b421c034d3336927caea1cd3e8c7a78a6311230200d4da922
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 45
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          securityContext:
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
      serviceAccountName: status-server
---
apiVersion: v1
kind: Service
metadata:
  name: status-server
  namespace: default
  labels:
    app: status-server
spec:
  selector:
    app: status-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
