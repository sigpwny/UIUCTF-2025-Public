	SETLOC	4000

	# start
	TCF	START
	NOOP
	NOOP
	NOOP
	#T6 interrupt
	TCF	T6RUPT
	NOOP
	NOOP
	NOOP
	#T5 interrupt
	RESUME
	NOOP
	NOOP
	NOOP
	#T3 interrupt
	TCF	T3RUPT
	NOOP
	NOOP
	NOOP
	#T4 interrupt
	TCF	T4RUPT
	NOOP
	NOOP
	NOOP
	#DSKY1 interrupt
	TCF	KYRUPT
	NOOP
	NOOP
	NOOP
	#DSKY2 interrupt
	RESUME
	NOOP
	NOOP
	NOOP
	#Uplink interrupt
	RESUME
	NOOP
	NOOP
	NOOP
	#Downlink interrupt
	RESUME
	NOOP
	NOOP
	NOOP
	#Radar interrupt
	RESUME
	NOOP
	NOOP
	NOOP
	#Hand controller interrupt
	RESUME
	NOOP
	NOOP
	NOOP



START
	CA	T3100MS
	TS	TIME3
	CA	T42000MS
	TS	TIME4
	CA	RSTLIGHT
	EXTEND
	WRITE	STSLIGHTS
	CS	OCT1
	TS	T6ACT
	CA	T61000MS
	TS	TIME6
	CA	T6ENA
	EXTEND
	WRITE	T6CTRL
	CA	OCT2
	TS	BB
	TS	NEWJOB
	#load initial state
	CA	ZERO
	TS	COLP0
	TS	COLP1
	TS	COLP2
	TS	COLP3
	TS	COLP4
	TS	SHP
	TS	ROT
	TS	POSY
	TS	SCORE
	TS	NUMMVS
	CA	OCT2
	TS	POSX
	CA	RNDSD
	TS	RND
	TS	NUMRND
MLOOP
	TS	NEWJOB
	TCF	MLOOP



T3RUPT
	XCH	ARUPT
	LXCH	LRUPT
	CA	T3100MS
	TS	TIME3
	CA	FREEZE
	EXTEND
	BZF	T3RUPT2
	XCH	ARUPT
	LXCH	LRUPT
	RESUME
T3RUPT2
	TC	DISPALL
	XCH	ARUPT
	LXCH	LRUPT
	RESUME



KYRUPT
	XCH	ARUPT
	CA	FREEZE
	EXTEND
	BZF	KYRUPT2
	XCH	ARUPT
	RESUME
KYRUPT2
	LXCH	LRUPT
	EXTEND
	QXCH	QRUPT
	#store previous state
	CA	POSX
	TS	PPOSX
	CA	POSY
	TS	PPOSY
	CA	ROT
	TS	PROT
	#4: left
	CA	POSXP
	TS	TARGET
	CA	POSX
	AD	OCT1
	TS	VALUE
	XCH	L
	CS	OCT4
	AD	L
	CCS	A
	TCF	NOLEFT
	NOOP
	NOOP
	EXTEND
	READ	KEY
	XCH	L
	CS	OCT4
	AD	L
	EXTEND
	BZF	ENDKYRUPT
NOLEFT
	#6: right
	CA	VALUE
	XCH	L
	CS	OCT2
	AD	L
	TS	VALUE
	CCS	A
	NOOP
	TCF	RIGHT
	TCF	NORIGHT
RIGHT
	EXTEND
	READ	KEY
	XCH	L
	CS	OCT6
	AD	L
	EXTEND
	BZF	ENDKYRUPT
NORIGHT
	#10: counterclockwise
	CA	ROTP
	TS	TARGET
	CA	ROT
	AD	OCT2
	XCH	L
	CA	OCT10
	TS	ARG2
	CA	ZERO
	EXTEND
	DV	ARG2
	LXCH	VALUE
	EXTEND
	READ	KEY
	XCH	L
	CS	OCT10
	AD	L
	EXTEND
	BZF	ENDKYRUPT
	#5: flip
	CA	VALUE
	AD	OCT2
	XCH	L
	CA	OCT10
	TS	ARG2
	CA	ZERO
	EXTEND
	DV	ARG2
	LXCH	VALUE
	EXTEND
	READ	KEY
	XCH	L
	CS	OCT5
	AD	L
	EXTEND
	BZF	ENDKYRUPT
	#2: clockwise
	CA	VALUE
	AD	OCT2
	XCH	L
	CA	OCT10
	TS	ARG2
	CA	ZERO
	EXTEND
	DV	ARG2
	LXCH	VALUE
	EXTEND
	READ	KEY
	XCH	L
	CS	OCT2
	AD	L
	EXTEND
	BZF	ENDKYRUPT
	#22: reset
	EXTEND
	READ	KEY
	AD	KEYRST
	CCS	A
	NOOP
	NOOP
	TCF	NOINFLP
	#trigger GOJAM via stuck interrupt
	CA	ZERO
	TS	Z
NOINFLP
	#default: noop
	CA	ZERO
	TS	TARGET
ENDKYRUPT
	#update target with value
	CA	VALUE
	INDEX	TARGET
	TS	A
	#check if moving out of bounds
	CA	UNDMVP
	TS	FIXFN
	TC	RNDRCOLS
	TC	CHKMV
	XCH	ARUPT
	LXCH	LRUPT
	EXTEND
	QXCH	QRUPT
	RESUME



T6RUPT
	XCH	ARUPT
	LXCH	LRUPT
	CA	NOLIGHTS
	EXTEND
	WRITE	STSLIGHTS
	CA	T6ACT
	EXTEND
	BZMF	T6END
	#countdown > 0
	EXTEND
	DIM	T6ACT
	#display countdown
	CA	BLANKN
	INDEX	T6ACT
	AD	DIGIT0
	EXTEND
	WRITE	SEVSEG
	CCS	T6ACT
	TCF	T6TRG
	INCR	MVAR
	INCR	MVAR
	TC	DISPMVS
	TCF	T6END
T6TRG
	#retrigger t6
	CA	T61000MS
	TS	TIME6
	CA	T6ENA
	EXTEND
	WRITE	T6CTRL
T6END
	XCH	ARUPT
	LXCH	LRUPT
	RESUME



T4RUPT
	XCH	ARUPT
	CA	FREEZE
	EXTEND
	BZF	T4RUPT2
	XCH	ARUPT
	RESUME
T4RUPT2
	LXCH	LRUPT
	EXTEND
	QXCH	QRUPT
	CA	T42000MS
	TS	TIME4
	#store previous state
	CA	POSX
	TS	PPOSX
	CA	POSY
	TS	PPOSY
	CA	ROT
	TS	PROT
	CA	SHP
	TS	PSHP
	#move down
	INCR	POSY
	CA	UNDMVSVP
	TS	FIXFN
	TC	RNDRCOLS
	TC	CHKMV
	#if still stuck, likely is game over
	CA	GMOVP
	TS	FIXFN
	TC	RNDRCOLS
	TC	CHKMV
	XCH	ARUPT
	LXCH	LRUPT
	EXTEND
	QXCH	QRUPT
	RESUME



DISPALL
	EXTEND
	QXCH	DISPALLQ
	TC	RNDRCOLS
	#11
	CA	BLANK11
	TS	ARG2
	CA	ZERO
	XCH	L
	CA	COLR4
	TC	DISPBLK
	#1213
	CA	BLANK13
	TS	ARG2
	CA	COLR3
	XCH	L
	CA	COLR2
	TC	DISPBLK
	#1415
	CA	BLANK15
	TS	ARG2
	CA	COLR1
	XCH	L
	CA	COLR0
	TC	DISPBLK
	#2122
	CA	BLANK22
	TS	ARG2
	CA	COLR4
	TS	CYR
	CA	CYR
	CA	CYR
	XCH	L
	CA	COLR3
	TS	CYR
	CA	CYR
	CA	CYR
	TC	DISPBLK
	#2324
	CA	BLANK24
	TS	ARG2
	CA	COLR2
	TS	CYR
	CA	CYR
	CA	CYR
	XCH	L
	CA	COLR1
	TS	CYR
	CA	CYR
	CA	CYR
	TC	DISPBLK
	#2531
	CA	BLANK31
	TS	ARG2
	CA	COLR0
	TS	CYR
	CA	CYR
	CA	CYR
	XCH	L
	CA	COLR4
	TS	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	TC	DISPBLK
	#3233
	CA	BLANK33
	TS	ARG2
	CA	COLR3
	TS	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	XCH	L
	CA	COLR2
	TS	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	TC	DISPBLK
	#3435
	CA	BLANK35
	TS	ARG2
	CA	COLR1
	TS	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	XCH	L
	CA	COLR0
	TS	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	TC	DISPBLK
	#score
	CA	SCORE
	MASK	OCT7
	INDEX	A
	CA	DIGIT0
	AD	BLANKN
	XCH	L
	CA	SCORE
	TS	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	MASK	OCT7
	INDEX	A
	CA	DIGIT0
	TS	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	EXTEND
	ROR	L
	EXTEND
	WRITE	SEVSEG
	#cleanup
	EXTEND
	QXCH	DISPALLQ
	RETURN



RNDRCOLS
	CA	ZERO
	TS	PAD0
	TS	PAD1
	TS	PAD2
	CA	COLP0
	TS	COLR0
	CA	COLP1
	TS	COLR1
	CA	COLP2
	TS	COLR2
	CA	COLP3
	TS	COLR3
	CA	COLP4
	TS	COLR4
	CA	ZERO
	TS	PAD3
	TS	PAD4
	TS	PAD5
	TS	SHPCLSN
	#parse shape
	CA	BBPOSX
	TS	PIXX
	CA	BBPOSY
	TS	PIXY
	INDEX	SHP
	CA	SHPO
	TS	SHPPRC
	CA	ROT
	TS	SHPDIR
SHPLOOP
	CA	OCT1
	TS	CYL
	CA	PIXY
PIXLOOP
	XCH	L
	CA	CYL
	XCH	L
	CCS	A
	TCF	PIXLOOP
	TCF	ENDPIXLP
	TCF	NEXTPIX
ENDPIXLP
	XCH	L
	TS	CYR
	CA	CYR
	TS	L
	INDEX	PIXX
	MASK	COLP0
	EXTEND
	BZF	NOCLSN
	INCR	SHPCLSN
NOCLSN
	INDEX	PIXX
	CA	COLR0
	EXTEND
	ROR	L
	INDEX	PIXX
	TS	COLR0
NEXTPIX
	#find next pixel of shape
	CA	SHPPRC
	MASK	OCT1
	EXTEND
	BZF	NOMOVE
	EXTEND
	INDEX	SHPDIR
	DCA	DIR
	DAS	PIXX
NOMOVE
	#continue rotation
	CA	OCT2
	AD	SHPDIR
	XCH	L
	CA	OCT10
	TS	ARG2
	CA	ZERO
	EXTEND
	DV	ARG2
	LXCH	SHPDIR
	CA	SHPPRC
	TS	L
	TS	SR
	CA	SR
	TS	SHPPRC
	#check if there are more bits in shape spec
	CCS	L
	TCF	SHPLOOP
	RETURN



CHKMV
	EXTEND
	QXCH	CHKMVQ
	CA	FIXFN
	XCH	L
	CA	PAD0
	EXTEND
	BZF	PAD0CHK
	LXCH	Z
PAD0CHK
	CA	PAD1
	EXTEND
	BZF	PAD1CHK
	LXCH	Z
PAD1CHK
	CA	PAD2
	EXTEND
	BZF	PAD2CHK
	LXCH	Z
PAD2CHK
	CA	PAD3
	EXTEND
	BZF	PAD3CHK
	LXCH	Z
PAD3CHK
	CA	PAD4
	EXTEND
	BZF	PAD4CHK
	LXCH	Z
PAD4CHK
	CA	PAD5
	EXTEND
	BZF	PAD5CHK
	LXCH	Z
PAD5CHK
	CA	COLR0
	MASK	OCT77700
	EXTEND
	BZF	COL0CHK
	LXCH	Z
COL0CHK
	CA	COLR1
	MASK	OCT77700
	EXTEND
	BZF	COL1CHK
	LXCH	Z
COL1CHK
	CA	COLR2
	MASK	OCT77700
	EXTEND
	BZF	COL2CHK
	LXCH	Z
COL2CHK
	CA	COLR3
	MASK	OCT77700
	EXTEND
	BZF	COL3CHK
	LXCH	Z
COL3CHK
	CA	COLR4
	MASK	OCT77700
	EXTEND
	BZF	COL4CHK
	LXCH	Z
COL4CHK
	CA	SHPCLSN
	EXTEND
	BZF	CLSNCHK
	LXCH	Z
CLSNCHK
	EXTEND
	QXCH	CHKMVQ
	RETURN



UNDOMV
	#restore position
	CA	PPOSX
	TS	POSX
	CA	PPOSY
	TS	POSY
	CA	PROT
	TS	ROT
	EXTEND
	QXCH	CHKMVQ
	RETURN



UNDOMVSV
	#restore position
	CA	PPOSX
	TS	POSX
	CA	PPOSY
	TS	POSY
	CA	PROT
	TS	ROT
	#save shape to board
	TC	RNDRCOLS
	CA	COLR0
	TS	COLP0
	CA	COLR1
	TS	COLP1
	CA	COLR2
	TS	COLP2
	CA	COLR3
	TS	COLP3
	CA	COLR4
	TS	COLP4
	#save shape position
	CA	ROT
	TS	CYR
	CA	OCT4
	EXTEND
	MP	SHP
	XCH	L
	AD	CYR
	INDEX	A
	CA	SHPOFO
	AD	POSX
	TS	ROTPOS
	CA	NUMMVS
	XCH	L
	CA	OCT3
	TS	ARG2
	CA	ZERO
	EXTEND
	DV	ARG2
	XCH	ARG2
	CA	ROTPOS
	TS	CYL
	XCH	L
SVMVLOOP
	CCS	A
	TCF	CTSVMVLP
	TCF	NOSVMVLP
CTSVMVLP
	XCH	L
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	XCH	L
	TCF	SVMVLOOP
NOSVMVLP
	INDEX	ARG2
	CA	MVAR
	EXTEND
	ROR	L
	INDEX	ARG2
	TS	MVAR
	CA	NUMMVS
	AD	OCT1
	TS	NUMMVS
	#clear full rows
	CA	OCT37400
	TS	L
	CA	COLP0
	MASK	COLP1
	MASK	COLP2
	MASK	COLP3
	MASK	COLP4
	TS	SR
CLRLP
	XCH	L
	TS	CYL
	CA	CYL
	XCH	L
	MASK	OCT1
	EXTEND
	BZF	NOCLR
	INCR	SCORE
	#shift row down
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	MASK	COLP0
	TS	ARG2
	CA	L
	MASK	COLP0
	TS	CYL
	CA	CYL
	LXCH	ARG2
	EXTEND
	ROR	L
	LXCH	ARG2
	TS	COLP0
	CA	L
	TS	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	MASK	COLP1
	TS	ARG2
	CA	L
	MASK	COLP1
	TS	CYL
	CA	CYL
	LXCH	ARG2
	EXTEND
	ROR	L
	LXCH	ARG2
	TS	COLP1
	CA	L
	TS	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	MASK	COLP2
	TS	ARG2
	CA	L
	MASK	COLP2
	TS	CYL
	CA	CYL
	LXCH	ARG2
	EXTEND
	ROR	L
	LXCH	ARG2
	TS	COLP2
	CA	L
	TS	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	MASK	COLP3
	TS	ARG2
	CA	L
	MASK	COLP3
	TS	CYL
	CA	CYL
	LXCH	ARG2
	EXTEND
	ROR	L
	LXCH	ARG2
	TS	COLP3
	CA	L
	TS	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	MASK	COLP4
	TS	ARG2
	CA	L
	MASK	COLP4
	TS	CYL
	CA	CYL
	LXCH	ARG2
	EXTEND
	ROR	L
	LXCH	ARG2
	TS	COLP4
NOCLR
	CA	SR
	EXTEND
	BZF	NEWSHP
	TCF	CLRLP
	#get a new shape
NEWSHP
	INCR	NUMRND
	CA	RND
	MASK	OCT2
	TS	CYR
	LXCH	CYR
	CA	RND
	MASK	OCT1
	EXTEND
	RXOR	L
	XCH	L
	CA	RND
	MASK	OCT77776
	EXTEND
	ROR	L
	TS	CYR
	CA	CYR
	TS	RND
	MASK	OCT2
	TS	CYR
	LXCH	CYR
	CA	RND
	MASK	OCT1
	EXTEND
	RXOR	L
	XCH	L
	CA	RND
	MASK	OCT77776
	EXTEND
	ROR	L
	TS	CYR
	CA	CYR
	TS	RND
	MASK	OCT2
	TS	CYR
	LXCH	CYR
	CA	RND
	MASK	OCT1
	EXTEND
	RXOR	L
	XCH	L
	CA	RND
	MASK	OCT77776
	EXTEND
	ROR	L
	TS	CYR
	CA	CYR
	TS	RND
	#mod 8, then store in shape
	MASK	OCT7
	TS	SHP
	XCH	L
	CS	OCT7
	AD	L
	EXTEND
	BZF	NEWSHP
	#if 7, try again
	#reset position
	CA	ZERO
	TS	ROT
	TS	POSY
	CA	OCT2
	TS	POSX
	EXTEND
	QXCH	CHKMVQ
	RETURN



GAMEOVER
	#restore position and shape
	CA	PPOSX
	TS	POSX
	CA	PPOSY
	TS	POSY
	CA	PROT
	TS	ROT
	CA	PSHP
	TS	SHP
	INCR	FREEZE
	#check board state
	CS	COLP0
	AD	TGT0
	EXTEND
	BZF	FNLCHK1
	TCF	FNLFAIL
FNLCHK1
	CS	COLP1
	AD	TGT1
	EXTEND
	BZF	FNLCHK2
	TCF	FNLFAIL
FNLCHK2
	CS	COLP2
	AD	TGT2
	EXTEND
	BZF	FNLCHK3
	TCF	FNLFAIL
FNLCHK3
	CS	COLP3
	AD	TGT3
	EXTEND
	BZF	FNLCHK4
	TCF	FNLFAIL
FNLCHK4
	CS	COLP4
	AD	TGT4
	EXTEND
	BZF	FNLCHK5
	TCF	FNLFAIL
FNLCHK5
	#check move order for ambiguous items
	CA	MVAR5
	MASK	OCT37
	CS	A
	AD	OCT23
	EXTEND
	BZF	FNLCHK6
	TCF	FNLFAIL
FNLCHK6
	CA	MVAR7
	MASK	OCT37
	CS	A
	AD	OCT4
	EXTEND
	BZF	FNLCHK7
	TCF	FNLFAIL
FNLCHK7
	CA	MVAR11
	MASK	OCT7
	CS	A
	AD	OCT3
	EXTEND
	BZF	FNLCHK8
	TCF	FNLFAIL
FNLCHK8
	#check num RNG calls
	CS	NUMRND
	AD	OCT63500
	EXTEND
	BZF	FNLCHK9
	TCF	FNLFAIL
FNLCHK9
	#check time passed
	CS	TIME2
	AD	OCT3
	EXTEND
	BZMF	FNLFAIL
	#set countdown
	CA	OCT12
	TS	T6ACT
	CA	T61000MS
	TS	TIME6
	CA	T6ENA
	EXTEND
	WRITE	T6CTRL
	TCF	FNLEND
FNLFAIL
	#set operator error
	CA	OPERLGHT
	EXTEND
	WRITE	STSLIGHTS
FNLEND
	EXTEND
	QXCH	CHKMVQ
	RETURN



#A: LSB pixels
#L: MSB pixels
#ARG2: BLANK
DISPBLK
	TS	NEWJOB
	MASK	OCT3
	INDEX	A
	CA	PIXEL
	XCH	L
	MASK	OCT3
	INDEX	A
	CA	PIXEL
	TS	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	AD	L
	AD	ARG2
	EXTEND
	WRITE	SEVSEG
	RETURN



#A: LSB num
#L: MSB num
#ARG2: BLANK
DISPNUM
	TS	NEWJOB
	MASK	OCT7
	INDEX	A
	CA	DIGIT0
	XCH	L
	MASK	OCT7
	INDEX	A
	CA	DIGIT0
	TS	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	CA	CYL
	AD	L
	AD	ARG2
	EXTEND
	WRITE	SEVSEG
	RETURN



	SETLOC	6000

DISPMVS
	EXTEND
	QXCH	DSPMVSQ
	#11
	CA	BLANK11
	TS	ARG2
	CA	ZERO
	XCH	L
	INDEX	DSPMVSOF
	CA	MVAR
	TC	DISPNUM
	#1213
	CA	BLANK13
	TS	ARG2
	INDEX	DSPMVSOF
	CA	MVAR
	TS	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	TS	L
	CA	CYR
	CA	CYR
	CA	CYR
	TC	DISPNUM
	#1415
	CA	BLANK15
	TS	ARG2
	INDEX	DSPMVSOF
	CA	MVAR
	TS	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	TS	L
	CA	CYR
	CA	CYR
	CA	CYR
	TC	DISPNUM
	#2122
	INCR	DSPMVSOF
	CA	BLANK22
	TS	ARG2
	INDEX	DSPMVSOF
	CA	MVAR
	TS	CYR
	XCH	L
	CA	CYR
	CA	CYR
	CA	CYR
	TC	DISPNUM
	#2324
	CA	BLANK24
	TS	ARG2
	INDEX	DSPMVSOF
	CA	MVAR
	TS	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	TS	L
	CA	CYR
	CA	CYR
	CA	CYR
	TC	DISPNUM
	#2531
	CA	BLANK31
	TS	ARG2
	INDEX	DSPMVSOF
	CA	MVAR
	TS	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	XCH	L
	INCR	DSPMVSOF
	INDEX	DSPMVSOF
	CA	MVAR
	TC	DISPNUM
	#3233
	CA	BLANK33
	TS	ARG2
	INDEX	DSPMVSOF
	CA	MVAR
	TS	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	XCH	L
	CA	CYR
	CA	CYR
	CA	CYR
	TC	DISPNUM
	#3435
	CA	BLANK35
	TS	ARG2
	INDEX	DSPMVSOF
	CA	MVAR
	TS	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	CA	CYR
	TS	L
	CA	CYR
	CA	CYR
	CA	CYR
	TC	DISPNUM
	INCR	DSPMVSOF
	#retrigger t6 if more nums
	CS	DSPMVSOF
	TS	L
	AD	A
	AD	L
	AD	NUMMVS
	EXTEND
	BZMF	NORETRIG
	INCR	T6ACT
	CA	T61000MS
	TS	TIME6
	CA	T6ENA
	EXTEND
	WRITE	T6CTRL
NORETRIG
	#cleanup
	EXTEND
	QXCH	DSPMVSQ
	RETURN



#registers
A		=	0
L		=	1
Q		=	2
EB		=	3
FB		=	4
Z		=	5
BB		=	6
ZERO		=	7
ARUPT		=	10
LRUPT		=	11
QRUPT		=	12
SAMPTIME1	=	13
SAMPTIME2	=	14
ZRUPT		=	15
BBRUPT		=	16
BRUPT		=	17
CYR		=	20
SR		=	21
CYL		=	22
EDOP		=	23
TIME2		=	24
TIME1		=	25
TIME3		=	26
TIME4		=	27
TIME5		=	30
TIME6		=	31

#MMIO
SEVSEG		=	10
T6CTRL		=	13
KEY		=	15
NEWJOB		=	67
STSLIGHTS	=	163

#erasable memory
NUMRND		=	1400
ROTPOS		=	1401
T6ACT		=	1402
DISPALLQ	=	1403
POSX		=	1404
POSY		=	1405
DSPMVSOF	=	1406
PAD0		=	1407
PAD1		=	1410
PAD2		=	1411
COLR0		=	1412
COLR1		=	1413
COLR2		=	1414
COLR3		=	1415
COLR4		=	1416
PAD3		=	1417
PAD4		=	1420
PAD5		=	1421
TARGET		=	1422
ROT		=	1423
PIXX		=	1424
PIXY		=	1425
VALUE		=	1426
ARG2		=	1427
COLP0		=	1430
COLP1		=	1431
COLP2		=	1432
COLP3		=	1433
COLP4		=	1434
SCORE		=	1435
CHKMVQ		=	1436
FIXFN		=	1437
PSHP		=	1440
DSPMVSQ		=	1441
NUMMVS		=	1442
FREEZE		=	1443
SHPDIR		=	1444
RND		=	1445
PPOSX		=	1446
SHPPRC		=	1447
SHP		=	1450
PROT		=	1451
PPOSY		=	1452
SHPCLSN		=	1453

UNDMVSVP	=	UNDMVSV2 +1
GMOVP		=	GMOV2 +1
BBPOSX		=	POSX -400
UNDMVP		=	UNDMV2 +1
BBPOSY		=	POSY -400

MVAR		=	1454	#this should be at the end since it's an unbounded array
MVAR5		=	MVAR +5
MVAR7		=	MVAR +7
MVAR11		=	MVAR +11

#fixed memory
BLANK13		OCT	34000
NOLIGHTS	OCT	0
BLANK11		OCT	40000
RSTLIGHT	OCT	200
BLANKN		OCT	44000
OCT25		OCT	25
OCT37400	OCT	37400
BLANK22		OCT	24000
BLANK15		OCT	30000
BLANK35		OCT	4000
# encode shape offsets for rotations RRXXX
SHPOFO		OCT	00
		OCT	01
		OCT	01
		OCT	00
		OCT	00
		OCT	10
		OCT	00
		OCT	11
		OCT	00
		OCT	11
		OCT	00
		OCT	10
		OCT	00
		OCT	10
		OCT	20
		OCT	30
		OCT	00
		OCT	10
		OCT	20
		OCT	30
		OCT	00
		OCT	10
		OCT	00
		OCT	11
		OCT	00
		OCT	10
		OCT	20
		OCT	30
PIXEL		OCT	0
		OCT	37
		OCT	34
		OCT	35
OCT52		OCT	52
BLANK24		OCT	20000
OCT76000	OCT	76000
TGT1		OCT	36
T3100MS		OCT	37766
OPERLGHT	OCT	100
T42000MS	OCT	37470
T6ENA		OCT	40000
BLANK31		OCT	14000
SHPO		OCT	00007
		OCT	00115
		OCT	00145
		OCT	00155
		OCT	00305
		OCT	04212
		OCT	04424
POSXP		1DNADR	POSX
UNDMV2		2FCADR	UNDOMV
OCT4		OCT	4
OCT2		OCT	2
GMOV2		2FCADR	GAMEOVER
OCT1		OCT	1
BLANK33		OCT	10000
OCT70		OCT	70
T41000MS	OCT	37634
POSYP		1DNADR	POSY
OCT5		OCT	5
OCT3		OCT	3
ROTP		1DNADR	ROT
T61000MS	OCT	3100
TGT3		OCT	37
OCT10		OCT	10
UNDMVSV2	2FCADR	UNDOMVSV
OCT6		OCT	6
OCT77		OCT	77
OCT7		OCT	7
OCT11		OCT	11
DIR		OCT	-1
		OCT	0
		OCT	0
		OCT	1
		OCT	1
		OCT	0
		OCT	0
		OCT	-1
KEYRST		OCT	-22
OCT77700	OCT	77700
TGT4		OCT	74
TGT0		OCT	27
DIGIT0		OCT	25
		OCT	3
		OCT	31
		OCT	33
		OCT	17
		OCT	36
		OCT	34
		OCT	23
		OCT	35
		OCT	37
OCT37		OCT	37
OCT63500	OCT	63500
RNDSD		OCT	63437
OCT77776	OCT	77776
TGT2		OCT	43
OCT12		OCT	12
OCT23		OCT	23
